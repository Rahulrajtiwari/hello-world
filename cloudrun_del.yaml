steps:
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Check if required environment variables are set
      if [[ -z "$_TARGET_PROJECT_ID" || -z "$_SERVICE_NAME" || -z "$_REGION" || -z "$_ENVIRONMENT" ]]; then
        echo "Error: TARGET_PROJECT_ID, SERVICE_NAME, REGION, and ENVIRONMENT must be provided."
        exit 1
      fi

      # Check for production environment and require approval
      if [[ "$_ENVIRONMENT" == "prod" ]]; then
        echo "Approval required for production environment."
        # Implement your approval mechanism here (e.g., manual approval step)
        # Set _APPROVAL_RECEIVED to "true" if approved
        if [[ -z "$_APPROVAL_RECEIVED" || "$_APPROVAL_RECEIVED" != "true" ]]; then
          echo "Deletion not approved. Exiting."
          exit 0
        fi
      fi

      echo "Deleting Cloud Run service: $_SERVICE_NAME in $_REGION for environment: $_ENVIRONMENT in project: $_TARGET_PROJECT_ID..."

      # Delete Cloud Run service (only if approved for production)
      gcloud run services delete "$_SERVICE_NAME" \
        --platform managed \
        --region "$_REGION" \
        --project "$_TARGET_PROJECT_ID" \
        --quiet

      echo "Successfully deleted Cloud Run service: $_SERVICE_NAME from project: $_TARGET_PROJECT_ID in environment: $_ENVIRONMENT."

# Define substitutions for your project details (replace with actual values)
substitutions:
  _TARGET_PROJECT_ID: 'your-project-id'
  _SERVICE_NAME: 'your-service-name'
  _REGION: 'your-region'
  _ENVIRONMENT: 'your-environment'  # Can be "prod" or other environment

options:
  logging: CLOUD_LOGGING_ONLY

# Set timeout (optional)
timeout: 600s

# Optional: Add trigger (e.g., on push to a specific branch)
# triggers:
#   - kind: cloud-source-repository
#     project: your-project-id
#     repository: your-repository
#     branch: your-branch
